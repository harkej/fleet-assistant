{"version":3,"sources":["components/VehicleBrandCountMessage/index.js","components/SummaryCard/index.js","services/index.js","components/ActionDropdown/index.js","components/MultiOptionsCard/index.js","components/TripDetailsMessage/index.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["BRAND_NAMES","VehicleBrandCountMessage","previousStep","steps","useState","vehicleCount","setVehicleCount","brandName","setBrandName","useEffect","a","async","multiOptions","value","url","includes","process","headers","fetch","response","json","result","fetchData","MONTHS","SummaryCard","summaryData","setSummaryData","summaryType","duration","baseUrl","method","then","resp","getBusinessSummary","handleResponse","style","width","Month","Year","className","Trip_Count","Km_Travelled","Fuel_Trip_Consumed_Litres","Total_Ton_Transported","ActionDropdown","title","options","isOpen","openSection","handleNextStep","onClick","map","item","key","id","trigger","optionsData","MultiOptionsCard","triggerNextStep","isSectionOpen","setIsSectionOpen","TripDetailsMessage","tripDetails","setTripDetails","type","Trip_Month","Trip_Year","prev_month_revenue","Math","round","Gross_Profit_Percentage","App","localStorage","getItem","userName","setUserName","isSpeechEnabled","message","component","replace","user","setItem","handleUserNameChange","asMessage","label","placeholder","recognitionEnable","speechSynthesis","enable","lang","headerTitle","contentStyle","flexGrow","enableMobileAutoFocus","enableSmoothScroll","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8d32088b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst BRAND_NAMES = [\"Tata\", \"Eicher\", \"Ashok Leyland\"];\n\nconst VehicleBrandCountMessage = ({ previousStep, steps }) => {\n  const [vehicleCount, setVehicleCount] = useState(\"\");\n  const [brandName, setBrandName] = useState('');\n\n  useEffect(() => {\n    async function fetchData() {\n      const brandName = steps.multiOptions.value;\n      const url = BRAND_NAMES.includes(brandName)\n        ? `${process.env.REACT_APP_BASE_URL}/vehiclebrandcount/${brandName}`\n        : `${process.env.REACT_APP_BASE_URL}/vehiclecount`;\n      const headers = {\n        \"Content-Type\": \"application/json\"\n      };\n      const response = await fetch(url, headers);\n      const { result } = await response.json();\n      setVehicleCount(result);\n      setBrandName(brandName);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      Total vehicle count{\" \"}\n      {BRAND_NAMES.includes(brandName) &&\n        `for ${brandName}`}{\" \"}\n      is {vehicleCount}\n    </div>\n  );\n};\n\nexport default VehicleBrandCountMessage;\n","import React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { getBusinessSummary } from \"../../services\";\n\nconst MONTHS = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nconst SUMMARY_TYPE = [\"year\", \"month\"];\n\nfunction SummaryCard({ previousStep }) {\n  const [summaryData, setSummaryData] = useState({});\n\n  const summaryType = previousStep.value || \"month\";\n\n  useEffect(() => {\n    getBusinessSummary(\n      summaryType === \"month\" ? \"this month\" : \"this year\"\n    ).then(resp => {\n      handleResponse(resp);\n    });\n  }, [summaryType]);\n\n  const handleResponse = response => {\n    const { result } = response;\n    setSummaryData(result || {});\n  };\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <h3>\n        Summary for{\" \"}\n        {summaryType === \"month\"\n          ? MONTHS[summaryData.Month - 1]\n          : summaryData.Year}\n      </h3>\n      <table>\n        <tbody>\n          <tr className=\"summary-table-row\">\n            <td>1. Trip Count</td>\n            <td>{summaryData.Trip_Count}</td>\n          </tr>\n          <tr className=\"summary-table-row\">\n            <td>2. Distance Travelled (km)</td>\n            <td>{summaryData.Km_Travelled}</td>\n          </tr>\n          <tr className=\"summary-table-row\">\n            <td>3. Fuel Consumed (ltr)</td>\n            <td>{summaryData.Fuel_Trip_Consumed_Litres}</td>\n          </tr>\n          <tr className=\"summary-table-row\">\n            <td>4. Freight Transported (ton)</td>\n            <td>{summaryData.Total_Ton_Transported}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default SummaryCard;\n","export function getBusinessSummary(duration) {\r\n  const baseUrl = `${process.env.REACT_APP_BASE_URL}/business_summary`;\r\n\r\n  return fetch(`${baseUrl}/${duration}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }).then(resp => resp.json());\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst ActionDropdown = ({\r\n  title,\r\n  options,\r\n  isOpen,\r\n  openSection,\r\n  handleNextStep\r\n}) => {\r\n  return (\r\n    <div className=\"action-dropdown-container\">\r\n      <div\r\n        className=\"action-dropdown-header\"\r\n        onClick={() => openSection(title)}\r\n      >\r\n        <h3 className=\"action-dropdown-title\">{title}</h3>\r\n        <span className={`action-dropdown-${isOpen ? \"open\" : \"close\"}`}>\r\n          >\r\n        </span>\r\n      </div>\r\n      {isOpen ? (\r\n        <div className=\"options-container\">\r\n          {options.map(item => (\r\n            <p\r\n              key={item.id}\r\n              className=\"action-dropdown-option\"\r\n              onClick={() => handleNextStep(item.trigger, item.value)}\r\n            >\r\n              {item.title}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDropdown;\r\n","import React, { useState } from \"react\";\r\nimport ActionDropdown from \"../ActionDropdown\";\r\nimport \"./style.css\";\r\n\r\nconst optionsData = [\r\n  {\r\n    id: 1,\r\n    title: \"Business Summary\",\r\n    options: [\r\n      {\r\n        id: 11,\r\n        title: \"View summary for this year\",\r\n        trigger: 'businessSummaryDetails',\r\n        value: 'year',\r\n      },\r\n      {\r\n        id: 12,\r\n        title: \"View summary for this month\",\r\n        trigger: 'businessSummaryDetails',\r\n        value: 'month',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Business Categories',\r\n    options: [\r\n      {\r\n        id: 21,\r\n        title: 'Trip Details',\r\n        trigger: 'tripDetailsOptionsPrompt'\r\n      },\r\n      {\r\n        id: 22,\r\n        title: 'Indirect Expense',\r\n      },\r\n      {\r\n        id: 23,\r\n        title: 'Direct Expense',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Vehicle Count\",\r\n    options: [\r\n      {\r\n        id: 31,\r\n        title: \"View total count\",\r\n        trigger: 'vehicleBrandCount',\r\n        value: 'all',\r\n      },\r\n      {\r\n        id: 32,\r\n        title: \"View vehicle count for Tata\",\r\n        trigger: 'vehicleBrandCount',\r\n        value: 'Tata',\r\n      },\r\n      {\r\n        id: 33,\r\n        title: \"View vehicle count for Eicher\",\r\n        trigger: 'vehicleBrandCount',\r\n        value: 'Eicher',\r\n      },\r\n      {\r\n        id: 34,\r\n        title: \"View vehicle count for Ashok Leyland\",\r\n        trigger: 'vehicleBrandCount',\r\n        value: 'Ashok Leyland',\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst MultiOptionsCard = ({ triggerNextStep }) => {\r\n  const [isSectionOpen, setIsSectionOpen] = useState({});\r\n\r\n  const handleNextStep = (trigger, value) => {\r\n    triggerNextStep({ trigger, value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"multi-options-container\">\r\n      <h3 className=\"multi-options-title\">Select an option below</h3>\r\n      {optionsData.map(item => (\r\n        <ActionDropdown\r\n          key={item.id}\r\n          title={item.title}\r\n          options={item.options}\r\n          isOpen={isSectionOpen[item.title]}\r\n          openSection={title =>\r\n            setIsSectionOpen({\r\n              // ...isSectionOpen,\r\n              [title]: !isSectionOpen[title]\r\n            })\r\n          }\r\n          handleNextStep={handleNextStep}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiOptionsCard;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst MONTHS = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\"\r\n];\r\n\r\nconst TripDetailsMessage = ({ previousStep }) => {\r\n  const [tripDetails, setTripDetails] = useState({});\r\n  const [brandName, setBrandName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const type = previousStep.value;\r\n      const url = `${process.env.REACT_APP_BASE_URL}/trip/${type}`;\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\"\r\n      };\r\n      const response = await fetch(url, headers);\r\n      const { result } = await response.json();\r\n      // console.log(responseJson);\r\n      if (result) {\r\n        setTripDetails(result[0]);\r\n        setBrandName(type);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <h3>\r\n        Summary for{\" \"}\r\n        {`${MONTHS[tripDetails.Trip_Month - 1]} ${tripDetails.Trip_Year}`}\r\n      </h3>\r\n      <table>\r\n        <tbody>\r\n          <tr className=\"summary-table-row\">\r\n            <td>1. Previous month revenue</td>\r\n            <td>{tripDetails.prev_month_revenue}</td>\r\n          </tr>\r\n          <tr className=\"summary-table-row\">\r\n            <td>2. Gross profit percentage</td>\r\n            <td>{Math.round(tripDetails.Gross_Profit_Percentage)}</td>\r\n          </tr>\r\n          <tr className=\"summary-table-row\">\r\n            <td>3. Gross margin growth</td>\r\n            <td>{tripDetails[`Gross_Margin_Growth%`]}</td>\r\n          </tr>{\" \"}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripDetailsMessage;\r\n","import React, { useState } from \"react\";\nimport ChatBot from \"react-simple-chatbot\";\nimport VehicleBrandCountMessage from \"../../components/VehicleBrandCountMessage\";\nimport SummaryCard from \"../../components/SummaryCard\";\nimport \"./style.css\";\nimport MultiOptionsCard from \"../../components/MultiOptionsCard\";\nimport TripDetailsMessage from \"../../components/TripDetailsMessage\";\n\nfunction App() {\n  const [userName, setUserName] = useState(\n    localStorage.getItem(\"userName\") ? localStorage.getItem(\"userName\") : \"\"\n  );\n  const [isSpeechEnabled, setIsSpeechEnabled] = useState(false);\n\n  const handleUserNameChange = value => {\n    localStorage.setItem(\"userName\", value);\n    setUserName(value);\n  };\n\n  const steps = [\n    {\n      id: \"0\",\n      message: userName\n        ? `Welcome back, ${userName}!`\n        : `Welcome, please enter your name to continue.`,\n      // trigger: userName ? \"basicSummary\" : \"promptName\"\n      trigger: userName ? \"multiOptions\" : \"promptName\"\n    },\n    {\n      id: \"multiOptions\",\n      component: <MultiOptionsCard />,\n      // asMessage: true,\n      replace: true\n    },\n    {\n      id: \"1\",\n      message: \"What is your name?\",\n      trigger: \"promptName\"\n    },\n    {\n      id: \"promptName\",\n      user: true,\n      trigger: ({ value }) => {\n        handleUserNameChange(value);\n        return \"basicSummary\";\n      }\n    },\n    {\n      id: \"basicSummary\",\n      message: `Here is a summary of your business`,\n      trigger: \"businessSummaryDetails\"\n    },\n    {\n      id: \"businessSummaryDetails\",\n      component: <SummaryCard />,\n      asMessage: true,\n      trigger: \"multiOptions\"\n    },\n    {\n      id: \"vehicleCount\",\n      component: <VehicleBrandCountMessage />,\n      asMessage: true,\n      trigger: \"vehicleCountOptionsPrompt\"\n    },\n    {\n      id: \"vehicleCountOptionsPrompt\",\n      message: \"Do you want to view vehicle count by brand?\",\n      trigger: \"showVehicleBrandOptions\"\n    },\n    {\n      id: \"showVehicleBrandOptions\",\n      options: [\n        { value: 1, label: \"Yes\", trigger: \"vehicleCountOptions\" },\n        { value: 2, label: \"No\", trigger: \"multiOptions\" }\n      ]\n    },\n    {\n      id: \"vehicleCountOptions\",\n      options: [\n        {\n          value: \"Tata\",\n          label: \"Tata\",\n          trigger: \"vehicleBrandCount\"\n        },\n        {\n          value: \"Eicher\",\n          label: \"Eicher\",\n          trigger: \"vehicleBrandCount\"\n        },\n        {\n          value: \"Ashok Leyland\",\n          label: \"Ashok Leyland\",\n          trigger: \"vehicleBrandCount\"\n        }\n      ],\n      placeholder: \"Enter some detail\"\n    },\n    {\n      id: \"vehicleBrandCount\",\n      component: <VehicleBrandCountMessage />,\n      asMessage: true,\n      trigger: \"multiOptions\"\n    },\n    {\n      id: \"businessSummaryOptions\",\n      options: [\n        {\n          value: \"month\",\n          label: \"Month\",\n          trigger: \"businessSummaryDetails\"\n        },\n        {\n          value: \"year\",\n          label: \"Year\",\n          trigger: \"businessSummaryDetails\"\n        }\n      ]\n    },\n    {\n      id: \"otherOptions\",\n      options: [\n        { value: 1, label: \"Vehicle Count\", trigger: \"vehicleCount\" },\n        {\n          value: 2,\n          label: \"Business Summary\",\n          trigger: \"businessSummaryOptions\"\n        },\n        { value: 3, label: \"Revenue Details\", trigger: \"otherOptions\" }\n      ]\n    },\n    {\n      id: \"tripDetailsOptionsPrompt\",\n      message: \"Select an option below\",\n      trigger: \"tripDetailsOptions\"\n    },\n    {\n      id: \"tripDetailsOptions\",\n      options: [\n        {\n          value: \"profit_margin_month_comparision\",\n          label: \"Profit margin month comparison\",\n          trigger: \"tripDetailsResult\"\n        },\n        {\n          value: \"profit_margin_breakup\",\n          label: \"Profit margin breakup\",\n          trigger: \"tripDetailsResult\"\n        },\n        {\n          value: \"top_3_vehicles_pm\",\n          label: \"Top 3 vehicles with profit margin\",\n          trigger: \"tripDetailsResult\"\n        },\n        {\n          value: \"bottom_3_vehicles_pm\",\n          label: \"Bottom 3 vehicles with profit margin\",\n          trigger: \"tripDetailsResult\"\n        },\n        {\n          value: \"trip_all_details\",\n          label: \"All trip details\",\n          trigger: \"tripDetailsResult\"\n        }\n      ]\n    },\n    {\n      id: \"tripDetailsResult\",\n      component: <TripDetailsMessage />,\n      asMessage: true\n    }\n  ];\n  return (\n    <div className=\"App\">\n      <ChatBot\n        recognitionEnable\n        speechSynthesis={{ enable: isSpeechEnabled, lang: \"en\" }}\n        headerTitle={`Welcome${userName ? `, ${userName}` : \"\"}`}\n        steps={steps}\n        contentStyle={{ flexGrow: 1 }}\n        enableMobileAutoFocus\n        enableSmoothScroll\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}