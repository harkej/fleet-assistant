{"version":3,"sources":["components/VehicleBrandCountMessage/index.js","components/SummaryCard/index.js","services/index.js","components/ActionDropdown/index.js","components/MultiOptionsCard/index.js","components/TripDetailsMessage/index.js","components/DirectExpenseReport/index.js","components/IndirectExpenseReport/index.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["BRAND_NAMES","VehicleBrandCountMessage","previousStep","steps","useState","vehicleCount","setVehicleCount","brandName","setBrandName","useEffect","a","async","multiOptions","value","url","includes","process","headers","fetch","response","json","result","fetchData","MONTHS","SummaryCard","summaryData","setSummaryData","summaryType","duration","baseUrl","method","then","resp","getBusinessSummary","handleResponse","style","width","Month","Year","className","Trip_Count","Km_Travelled","Fuel_Trip_Consumed_Litres","Total_Ton_Transported","ActionDropdown","title","options","isOpen","openSection","handleNextStep","onClick","map","item","key","id","trigger","optionsData","MultiOptionsCard","triggerNextStep","isSectionOpen","setIsSectionOpen","TripDetailsMessage","tripDetails","setTripDetails","type","Trip_Month","Trip_Year","prev_month_revenue","Math","round","Gross_Profit_Percentage","DirectExpenseReport","month","setMonth","year","setYear","directExpense","setDirectExpense","Total_Direct_Expense","IndirectExpenseReport","responseJson","console","log","App","localStorage","getItem","userName","setUserName","isSpeechEnabled","message","component","replace","user","setItem","handleUserNameChange","asMessage","label","placeholder","recognitionEnable","speechSynthesis","enable","lang","headerTitle","contentStyle","flexGrow","enableMobileAutoFocus","enableSmoothScroll","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cb9d4fe0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst BRAND_NAMES = [\"Tata\", \"Eicher\", \"Ashok Leyland\"];\r\n\r\nconst VehicleBrandCountMessage = ({ previousStep, steps }) => {\r\n  const [vehicleCount, setVehicleCount] = useState(\"\");\r\n  const [brandName, setBrandName] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const brandName = steps.multiOptions.value;\r\n      const url = BRAND_NAMES.includes(brandName)\r\n        ? `${process.env.REACT_APP_BASE_URL}/vehiclebrandcount/${brandName}`\r\n        : `${process.env.REACT_APP_BASE_URL}/vehiclecount`;\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\"\r\n      };\r\n      const response = await fetch(url, headers);\r\n      const { result } = await response.json();\r\n      setVehicleCount(result);\r\n      setBrandName(brandName);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      Total vehicle count{\" \"}\r\n      {BRAND_NAMES.includes(brandName) &&\r\n        `for ${brandName}`}{\" \"}\r\n      is {vehicleCount}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VehicleBrandCountMessage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport { getBusinessSummary } from \"../../services\";\r\n\r\nconst MONTHS = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\"\r\n];\r\n\r\nconst SUMMARY_TYPE = [\"year\", \"month\"];\r\n\r\nfunction SummaryCard({ previousStep }) {\r\n  const [summaryData, setSummaryData] = useState({});\r\n\r\n  const summaryType = previousStep.value || \"month\";\r\n\r\n  useEffect(() => {\r\n    getBusinessSummary(\r\n      summaryType === \"month\" ? \"this month\" : \"this year\"\r\n    ).then(resp => {\r\n      handleResponse(resp);\r\n    });\r\n  }, [summaryType]);\r\n\r\n  const handleResponse = response => {\r\n    const { result } = response;\r\n    setSummaryData(result || {});\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <h3>\r\n        Summary for{\" \"}\r\n        {summaryType === \"month\"\r\n          ? MONTHS[summaryData.Month - 1]\r\n          : summaryData.Year}\r\n      </h3>\r\n      <table>\r\n        <tbody>\r\n          <tr className=\"summary-table-row\">\r\n            <td>1. Trip Count</td>\r\n            <td>{summaryData.Trip_Count}</td>\r\n          </tr>\r\n          <tr className=\"summary-table-row\">\r\n            <td>2. Distance Travelled (km)</td>\r\n            <td>{summaryData.Km_Travelled}</td>\r\n          </tr>\r\n          <tr className=\"summary-table-row\">\r\n            <td>3. Fuel Consumed (ltr)</td>\r\n            <td>{summaryData.Fuel_Trip_Consumed_Litres}</td>\r\n          </tr>\r\n          <tr className=\"summary-table-row\">\r\n            <td>4. Freight Transported (ton)</td>\r\n            <td>{summaryData.Total_Ton_Transported}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryCard;\r\n","export function getBusinessSummary(duration) {\r\n  const baseUrl = `${process.env.REACT_APP_BASE_URL}/business_summary`;\r\n\r\n  return fetch(`${baseUrl}/${duration}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }).then(resp => resp.json());\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst ActionDropdown = ({\r\n  title,\r\n  options,\r\n  isOpen,\r\n  openSection,\r\n  handleNextStep\r\n}) => {\r\n  return (\r\n    <div className=\"action-dropdown-container\">\r\n      <div\r\n        className=\"action-dropdown-header\"\r\n        onClick={() => openSection(title)}\r\n      >\r\n        <h3 className=\"action-dropdown-title\">{title}</h3>\r\n        <span className={`action-dropdown-${isOpen ? \"open\" : \"close\"}`}>\r\n          >\r\n        </span>\r\n      </div>\r\n      {isOpen ? (\r\n        <div className=\"options-container\">\r\n          {options.map(item => (\r\n            <p\r\n              key={item.id}\r\n              className=\"action-dropdown-option\"\r\n              onClick={() => handleNextStep(item.trigger, item.value)}\r\n            >\r\n              {item.title}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDropdown;\r\n","import React, { useState } from \"react\";\r\nimport ActionDropdown from \"../ActionDropdown\";\r\nimport \"./style.css\";\r\n\r\nconst optionsData = [\r\n  {\r\n    id: 1,\r\n    title: \"Business Summary\",\r\n    options: [\r\n      {\r\n        id: 11,\r\n        title: \"View summary for this year\",\r\n        trigger: 'businessSummaryDetails',\r\n        value: 'year',\r\n      },\r\n      {\r\n        id: 12,\r\n        title: \"View summary for this month\",\r\n        trigger: 'businessSummaryDetails',\r\n        value: 'month',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Business Categories',\r\n    options: [\r\n      {\r\n        id: 21,\r\n        title: 'Trip Details',\r\n        trigger: 'tripDetailsOptionsPrompt'\r\n      },\r\n      {\r\n        id: 22,\r\n        title: 'Indirect Expense',\r\n        trigger: 'indirectExpenseOptionsPrompt'\r\n      },\r\n      {\r\n        id: 23,\r\n        title: 'Direct Expense',\r\n        trigger: 'directExpenseOptionsPrompt'\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Vehicle Count\",\r\n    options: [\r\n      {\r\n        id: 31,\r\n        title: \"View total count\",\r\n        trigger: 'vehicleBrandCount',\r\n        value: 'all',\r\n      },\r\n      {\r\n        id: 32,\r\n        title: \"View vehicle count for Tata\",\r\n        trigger: 'vehicleBrandCount',\r\n        value: 'Tata',\r\n      },\r\n      {\r\n        id: 33,\r\n        title: \"View vehicle count for Eicher\",\r\n        trigger: 'vehicleBrandCount',\r\n        value: 'Eicher',\r\n      },\r\n      {\r\n        id: 34,\r\n        title: \"View vehicle count for Ashok Leyland\",\r\n        trigger: 'vehicleBrandCount',\r\n        value: 'Ashok Leyland',\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst MultiOptionsCard = ({ triggerNextStep }) => {\r\n  const [isSectionOpen, setIsSectionOpen] = useState({});\r\n\r\n  const handleNextStep = (trigger, value) => {\r\n    triggerNextStep({ trigger, value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"multi-options-container\">\r\n      <h3 className=\"multi-options-title\">Select an option below</h3>\r\n      {optionsData.map(item => (\r\n        <ActionDropdown\r\n          key={item.id}\r\n          title={item.title}\r\n          options={item.options}\r\n          isOpen={isSectionOpen[item.title]}\r\n          openSection={title =>\r\n            setIsSectionOpen({\r\n              // ...isSectionOpen,\r\n              [title]: !isSectionOpen[title]\r\n            })\r\n          }\r\n          handleNextStep={handleNextStep}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiOptionsCard;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst TripDetailsMessage = ({ previousStep }) => {\r\n  const [tripDetails, setTripDetails] = useState({});\r\n  const [brandName, setBrandName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const type = previousStep.value;\r\n      const url = `${process.env.REACT_APP_BASE_URL}/trip/${type}`;\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\"\r\n      };\r\n      const response = await fetch(url, headers);\r\n      const { result } = await response.json();\r\n      // console.log(responseJson);\r\n      if (result) {\r\n        setTripDetails(result[0]);\r\n        setBrandName(type);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <h3>\r\n        Summary for{\" \"}\r\n        {`${tripDetails.Trip_Month} ${tripDetails.Trip_Year}`}\r\n      </h3>\r\n      <table>\r\n        <tbody>\r\n          <tr className=\"summary-table-row\">\r\n            <td>1. Previous month revenue</td>\r\n            <td>{tripDetails.prev_month_revenue}</td>\r\n          </tr>\r\n          <tr className=\"summary-table-row\">\r\n            <td>2. Gross profit percentage</td>\r\n            <td>{Math.round(tripDetails.Gross_Profit_Percentage)}</td>\r\n          </tr>\r\n          <tr className=\"summary-table-row\">\r\n            <td>3. Gross margin growth</td>\r\n            <td>{tripDetails[`Gross_Margin_Growth%`]}</td>\r\n          </tr>{\" \"}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TripDetailsMessage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst DirectExpenseReport = ({ previousStep }) => {\r\n  const [month, setMonth] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n  const [directExpense, setDirectExpense] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const type = previousStep.value;\r\n      const url = `${process.env.REACT_APP_BASE_URL}/direct_expense/${type}`;\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\"\r\n      };\r\n      const response = await fetch(url, headers);\r\n      const { result } = await response.json();\r\n      if (result) {\r\n        setMonth(result[0].Trip_Month);\r\n        setYear(result[0].Trip_Year);\r\n        setDirectExpense(result[0].Total_Direct_Expense);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [previousStep.value]);\r\n\r\n  return (\r\n    <div>\r\n      <p>Direct Expense Report</p>\r\n      <p>\r\n        {month ? `${month}, ` : \"\"}\r\n        {year} - {directExpense}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectExpenseReport;\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\n\r\nconst IndirectExpenseReport = ({ previousStep }) => {\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const type = previousStep.value;\r\n      const url = `${process.env.REACT_APP_BASE_URL}/indirect_expense/${type}`;\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\"\r\n      };\r\n      const response = await fetch(url, headers);\r\n      const responseJson = await response.json();\r\n      console.log(responseJson)\r\n    }\r\n    fetchData();\r\n  }, [previousStep.value]);\r\n  return (\r\n    <div>\r\n      Indirect expense report\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IndirectExpenseReport\r\n","import React, { useState } from \"react\";\r\nimport ChatBot from \"react-simple-chatbot\";\r\nimport VehicleBrandCountMessage from \"../../components/VehicleBrandCountMessage\";\r\nimport SummaryCard from \"../../components/SummaryCard\";\r\nimport \"./style.css\";\r\nimport MultiOptionsCard from \"../../components/MultiOptionsCard\";\r\nimport TripDetailsMessage from \"../../components/TripDetailsMessage\";\r\nimport DirectExpenseReport from \"../../components/DirectExpenseReport\";\r\nimport IndirectExpenseReport from \"../../components/IndirectExpenseReport\";\r\n\r\nfunction App() {\r\n  const [userName, setUserName] = useState(\r\n    localStorage.getItem(\"userName\") ? localStorage.getItem(\"userName\") : \"\"\r\n  );\r\n  const [isSpeechEnabled, setIsSpeechEnabled] = useState(false);\r\n\r\n  const handleUserNameChange = value => {\r\n    localStorage.setItem(\"userName\", value);\r\n    setUserName(value);\r\n  };\r\n\r\n  const steps = [\r\n    {\r\n      id: \"0\",\r\n      message: userName\r\n        ? `Welcome back, ${userName}!`\r\n        : `Welcome, please enter your name to continue.`,\r\n      // trigger: userName ? \"basicSummary\" : \"promptName\"\r\n      trigger: userName ? \"multiOptions\" : \"promptName\"\r\n    },\r\n    {\r\n      id: \"multiOptions\",\r\n      component: <MultiOptionsCard />,\r\n      // asMessage: true,\r\n      replace: true\r\n    },\r\n    {\r\n      id: \"1\",\r\n      message: \"What is your name?\",\r\n      trigger: \"promptName\"\r\n    },\r\n    {\r\n      id: \"promptName\",\r\n      user: true,\r\n      trigger: ({ value }) => {\r\n        handleUserNameChange(value);\r\n        return \"basicSummary\";\r\n      }\r\n    },\r\n    {\r\n      id: \"basicSummary\",\r\n      message: `Here is a summary of your business`,\r\n      trigger: \"businessSummaryDetails\"\r\n    },\r\n    {\r\n      id: \"businessSummaryDetails\",\r\n      component: <SummaryCard />,\r\n      asMessage: true,\r\n      trigger: \"multiOptions\"\r\n    },\r\n    {\r\n      id: \"vehicleCount\",\r\n      component: <VehicleBrandCountMessage />,\r\n      asMessage: true,\r\n      trigger: \"vehicleCountOptionsPrompt\"\r\n    },\r\n    {\r\n      id: \"vehicleCountOptionsPrompt\",\r\n      message: \"Do you want to view vehicle count by brand?\",\r\n      trigger: \"showVehicleBrandOptions\"\r\n    },\r\n    {\r\n      id: \"showVehicleBrandOptions\",\r\n      options: [\r\n        { value: 1, label: \"Yes\", trigger: \"vehicleCountOptions\" },\r\n        { value: 2, label: \"No\", trigger: \"multiOptions\" }\r\n      ]\r\n    },\r\n    {\r\n      id: \"vehicleCountOptions\",\r\n      options: [\r\n        {\r\n          value: \"Tata\",\r\n          label: \"Tata\",\r\n          trigger: \"vehicleBrandCount\"\r\n        },\r\n        {\r\n          value: \"Eicher\",\r\n          label: \"Eicher\",\r\n          trigger: \"vehicleBrandCount\"\r\n        },\r\n        {\r\n          value: \"Ashok Leyland\",\r\n          label: \"Ashok Leyland\",\r\n          trigger: \"vehicleBrandCount\"\r\n        }\r\n      ],\r\n      placeholder: \"Enter some detail\"\r\n    },\r\n    {\r\n      id: \"vehicleBrandCount\",\r\n      component: <VehicleBrandCountMessage />,\r\n      asMessage: true,\r\n      trigger: \"multiOptions\"\r\n    },\r\n    {\r\n      id: \"businessSummaryOptions\",\r\n      options: [\r\n        {\r\n          value: \"month\",\r\n          label: \"Month\",\r\n          trigger: \"businessSummaryDetails\"\r\n        },\r\n        {\r\n          value: \"year\",\r\n          label: \"Year\",\r\n          trigger: \"businessSummaryDetails\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: \"otherOptions\",\r\n      options: [\r\n        { value: 1, label: \"Vehicle Count\", trigger: \"vehicleCount\" },\r\n        {\r\n          value: 2,\r\n          label: \"Business Summary\",\r\n          trigger: \"businessSummaryOptions\"\r\n        },\r\n        { value: 3, label: \"Revenue Details\", trigger: \"otherOptions\" }\r\n      ]\r\n    },\r\n    {\r\n      id: \"tripDetailsOptionsPrompt\",\r\n      message: \"Select an option below\",\r\n      trigger: \"tripDetailsOptions\"\r\n    },\r\n    {\r\n      id: \"tripDetailsOptions\",\r\n      options: [\r\n        {\r\n          value: \"profit_margin_month_comparision\",\r\n          label: \"Profit margin month comparison\",\r\n          trigger: \"tripDetailsResult\"\r\n        },\r\n        {\r\n          value: \"profit_margin_breakup\",\r\n          label: \"Profit margin breakup\",\r\n          trigger: \"tripDetailsResult\"\r\n        },\r\n        {\r\n          value: \"top_3_vehicles_pm\",\r\n          label: \"Top 3 vehicles with profit margin\",\r\n          trigger: \"tripDetailsResult\"\r\n        },\r\n        {\r\n          value: \"bottom_3_vehicles_pm\",\r\n          label: \"Bottom 3 vehicles with profit margin\",\r\n          trigger: \"tripDetailsResult\"\r\n        },\r\n        {\r\n          value: \"trip_all_details\",\r\n          label: \"All trip details\",\r\n          trigger: \"tripDetailsResult\"\r\n        },\r\n        {\r\n          value: 'go_back',\r\n          label: 'Go back',\r\n          trigger: 'multiOptions'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: \"tripDetailsResult\",\r\n      component: <TripDetailsMessage />,\r\n      asMessage: true,\r\n      trigger: 'tripDetailsOptions'\r\n    },\r\n    {\r\n      id: \"directExpenseOptionsPrompt\",\r\n      message: \"Select an option below\",\r\n      trigger: \"directExpenseOptions\"\r\n    },\r\n    {\r\n      id: \"directExpenseOptions\",\r\n      options: [\r\n        {\r\n          value: \"this month\",\r\n          label: \"Current month\",\r\n          trigger: \"directExpenseResult\"\r\n        },\r\n        {\r\n          value: \"this year\",\r\n          label: \"Current year\",\r\n          trigger: \"directExpenseResult\"\r\n        },\r\n        {\r\n          value: 'go_back',\r\n          label: 'Go back',\r\n          trigger: 'multiOptions'\r\n        }\r\n      ],\r\n    },\r\n    {\r\n      id: \"directExpenseResult\",\r\n      component: <DirectExpenseReport />,\r\n      trigger: 'directExpenseOptions'\r\n    },\r\n    {\r\n      id: \"indirectExpenseOptionsPrompt\",\r\n      message: \"Select an option below\",\r\n      trigger: \"indirectExpenseOptions\"\r\n    },\r\n    {\r\n      id: \"indirectExpenseOptions\",\r\n      options: [\r\n        {\r\n          value: \"breakup_by_vehicles\",\r\n          label: \"Breakup by vehicles\",\r\n          trigger: \"indirectExpenseResult\"\r\n        },\r\n        {\r\n          value: \"breakup_by_expense_category\",\r\n          label: \"Breakup by expense category\",\r\n          trigger: \"indirectExpenseResult\"\r\n        },\r\n        {\r\n          value: \"indirect_expense\",\r\n          label: \"Indirect expense\",\r\n          trigger: \"indirectExpenseResult\"\r\n        },\r\n        {\r\n          value: \"service_expense_by_vehicles\",\r\n          label: \"Service expense by vehicles\",\r\n          trigger: \"indirectExpenseResult\"\r\n        },\r\n        {\r\n          value: \"emi_loan_expense_by_vehicles\",\r\n          label: \"EMI loan expense by vehicles\",\r\n          trigger: \"indirectExpenseResult\"\r\n        },\r\n        {\r\n          value: 'go_back',\r\n          label: 'Go back',\r\n          trigger: 'multiOptions'\r\n        }\r\n      ],\r\n    },\r\n    {\r\n      id: \"indirectExpenseResult\",\r\n      component: <IndirectExpenseReport />,\r\n      trigger: 'indirectExpenseOptions'\r\n    }\r\n  ];\r\n  return (\r\n    <div className=\"App\">\r\n      <ChatBot\r\n        recognitionEnable\r\n        speechSynthesis={{ enable: isSpeechEnabled, lang: \"en\" }}\r\n        headerTitle={`Welcome${userName ? `, ${userName}` : \"\"}`}\r\n        steps={steps}\r\n        contentStyle={{ flexGrow: 1 }}\r\n        enableMobileAutoFocus\r\n        enableSmoothScroll\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}